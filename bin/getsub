#!/usr/bin/env ruby

require 'optparse'
require 'uri'
require File.join(File.dirname(__FILE__), '..', 'lib', 'osdb')


def env_lang
  OSDb::Language.from_locale(ENV['LANG'])
end

options = OSDb.parse_options

def group_by_movie_name(subs)
  subs.inject({}) do |hash, sub| 
    hash[sub.movie_name] ||= []
    hash[sub.movie_name] << sub
    hash
  end
end

def ask_user_to_identify_movie(movies)
  puts "D'oh! You stumbled upon a hash conflict, please resolve it:"
  puts
  movies.keys.each_with_index do |name, index|
    puts " #{index} - #{name}"
  end
  puts
  print 'id: '
  str = STDIN.gets
  movies[movies.keys[str.to_i]]
end

def select_sub(subs)
  return subs.first if subs.length == 1
  movies = group_by_movie_name(subs)
  return movies.values.first.max if movies.length == 1
  selected_movie_subs = ask_user_to_identify_movie(movies)
  selected_movie_subs.max
end

movies = OSDb::Movie.list

server = OSDb::Server.new(
  :host => 'api.opensubtitles.org', 
  :path => '/xml-rpc', 
  :timeout => 90, 
  :useragent => "SubDownloader 2.0.10" # register useragent ? WTF ? too boring.
) 
STDOUT.sync = true

if !options[:dir] && ARGV.empty?
  puts OSDb.help
  exit 1
end

if movies.empty?
  puts "No file(s) provided"
  puts OSDb.help
  exit 1
end

movies.each do |movie|
  begin
    OSDb.log "* search subs for: #{movie.path}"
    subs = server.search_subtitles(:moviehash => movie.hash, :moviebytesize => movie.size, :sublanguageid => options[:languages].join(','))
    if subs.any?
      sub = select_sub(subs)
      sub_path = movie.sub_path(sub.format)
      OSDb::Sub.download!(sub.url, sub_path)
    else
      OSDb.log "* no sub found"
    end
    OSDb.log
  end
end
